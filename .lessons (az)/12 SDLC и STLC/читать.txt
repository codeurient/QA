​Жизненный цикл разработки ПО (SDLC - Software Development Lifecycle)


Жизненный цикл программного обеспечения (software lifecycle): Период времени, начинающийся 
с момента появления концепции программного обеспечения и заканчивающийся тогда, когда дальнейшее 
использование программного обеспечения невозможно. Жизненный цикл программного обеспечения обычно 
включает в себя следующие этапы: концепт, описание требований, дизайн, реализация, тестирование, 
инсталляция и наладка, эксплуатация и поддержка и, иногда, этап вывода из эксплуатации. Данные 
фазы могут накладываться друг на друга или проводиться итерационно. (ISTQB)



Период времени от концепции до первоначальной версии известен как жизненный цикл разработки, 
который является частью жизненного цикла программного обеспечения. С момента первого запуска 
система переходит в эксплуатацию (функционирование). Система остается в эксплуатации до момента 
прекращения использования. (ГОСТ 56920)


SDLC - это систематизированный процесс, этапы которого охватывают полный жизненный цикл программного 
обеспечения (Software Lifecycle) и который определяет различные этапы разработки программного 
обеспечения для создания высококачественного программного обеспечения, отвечающего ожиданиям клиентов 
и для улучшения эффективности разработки. Разработка системы должна быть завершена в заранее 
определенные сроки и стоимость. Каждая фаза жизненного цикла SDLC имеет свой собственный процесс и 
результаты, которые используются в следующей фазе.


Обычно он делится на шесть-восемь шагов, но менеджеры проектов могут объединять, декомпозировать 
или пропускать шаги, в зависимости от скоупа проекта.


В разных источниках фазы немного отличаются, но глобально суть везде одинакова.


------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------


Фазы SDLC:


Сбор и анализ требований (Requirement Gathering and Analysis): На этом этапе от клиента собирается 
вся необходимая информация для разработки продукта в соответствии с их ожиданиями. Любые неясности 
должны быть разрешены сразу на этом этапе. Бизнес-аналитик и менеджер проекта назначили встречу с 
заказчиком, чтобы собрать всю информацию, например, что заказчик хочет построить, кто будет конечным 
пользователем, какова цель продукта. Перед созданием продукта очень важно понимание или знание 
продукта. Например, клиент хочет иметь приложение, которое включает денежные транзакции. В этом случае 
требование должно быть четким, например, какие транзакции будут выполняться, как они будут проводиться, 
в какой валюте они будут проводиться и т. д. После того, как сбор требований завершен, проводится 
анализ для проверки возможности разработки продукта. После четкого понимания требования создается 
документ SRS (Спецификация требований к программному обеспечению). Этот документ должен быть полностью 
понятен разработчикам, а также должен быть рассмотрен заказчиком для использования в будущем;



Дизайн (Design): На этом этапе требования, собранные в документе SRS, используются в качестве входных 
данных, и создается архитектура программного обеспечения, которая используется для реализации разработки системы.


Разработка (Implementation or Coding): Реализация / кодирование начинается, как только разработчик получает 
Design document. Дизайн программного обеспечения переведен в исходный код. На этом этапе реализуются все компоненты 
программного обеспечения;


Тестирование (Testing): Тестирование начинается после завершения кодирования и выпуска модулей для тестирования. 
На этом этапе разработанное программное обеспечение тщательно тестируется, и все обнаруженные дефекты передаются 
разработчикам для их исправления. Повторное тестирование, регрессионное тестирование проводится до тех пор, пока 
программное обеспечение не будет соответствовать ожиданиям клиента. Тестировщики обращаются к документу SRS, чтобы 
убедиться, что программное обеспечение соответствует стандарту заказчика;


Развертывание (Deployment): После тестирования продукта он развертывается в производственной среде или выполняется 
первое UAT (пользовательское приемочное тестирование), в зависимости от ожиданий клиента. В случае UAT создается 
копия производственной среды, и заказчик вместе с разработчиками выполняет тестирование. Если клиент остается доволен, 
то предоставляет согласие на релиз;


Поддержка (Maintenance): Основное внимание на этом этапе SDLC уделяется обеспечению того, чтобы потребности продолжали 
удовлетворяться и чтобы система продолжала работать в соответствии со спецификацией, упомянутой в первом этапе. После 
того как система развернута и клиенты начинают использовать разработанную систему следует 3 вида активностей:
    Исправление ошибок;
    Обновление;
    Улучшение.

    
------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------


Заметка от автора курса

В некоторых источниках дополнительно выделяют следующие этапы:


Идея, или планирование системы, который предшествует этапу "Анализ требований". Представляет собой определение проблемы, 
которую поможет решить разрабатываемый продукт.


Ввод в эксплуатацию - синоним этапа "Развертывание".


Вывод из эксплуатации, который завершает SDLC. Например, при устаревании продукта и прекращения его поддержки, необходимо сформировать процесс 
вывода продукта из эксплуатации, который включает в себя: сохранение информации, удаление данных, удаление аппаратного и программного обеспечения



------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------



Жизненный цикл тестирования ПО (STLC - Software Testing Lifecycle)


STLC - это процесс тестирования, который включает в себя определенную последовательность шагов, чтобы гарантировать достижение целей в области 
качества. В процессе STLC каждое действие выполняется планомерно и систематически. Каждый этап имеет разные цели и результаты. У разных организаций 
разные этапы STLC, однако основа остается прежней.



STLC имеет несколько взаимосвязанных фаз и в целом очень похож на SDLC. Эти фазы являются последовательными и называются:

Анализ требований (Requirement Analysis): один из важнейших этапов, потому что именно на нем можно почти бесплатно исправить недостатки проекта. 
Этап анализа требований также определяет потенциальную потребность в автоматизированном тестировании и позволяет производить экономические расчеты 
затрат на рабочую силу на основе оценки проекта. На этом же этапе обсуждаются и документируются критерии начала и окончания тестирования



Планирование тестирования (Test Planning): на этом этапе формируется план тестирования, т.е. мы определяем действия и ресурсы, которые помогут 
достичь целей тестирования (участники и их роли, инструменты, окружение). Во время планирования мы также пытаемся определить метрики, метод сбора 
и отслеживания этих метрик. План составляют исходя из требований, тестовой стратегии и анализа рисков



Разработка тест-кейсов (Test Case Development): подразумевает использование ручного и автоматизированного тестирования для достижения полного 
охвата функциональности программного обеспечения, при этом процесс основан на заранее установленных требованиях. Чаще всего тест-кейсы для 
автоматического тестирования пишутся отдельно, так как кейсы для ручного тестирования описаны в виде шпаргалок (cheat sheets)



Настройка тестовой среды (Test Environment Setup): в плане тестирования четко указано, какую тестовую среду следует использовать. На этом 
этапе STLC настраиваются операционные системы и виртуальные машины, развертываются инструменты тестирования, такие как Selenium, Katalon Studio, 
а также тестовая среда и базы данных проекта. Мы также обращаемся с запросами к DevOps и администраторам, если требуется поддержка



Выполнение тестов (Test Execution): тесты выполняются на основе готовой тестовой документации и правильно настроенной тестовой среды. Все результаты 
тестирования регистрируются в Системе управления тестированием. Отрицательно пройденные тесты, в которых фактический результат отличается от ожидаемого, 
регистрируются как ошибки и передаются команде разработчиков на доработку с последующей перепроверкой после исправления



Завершение цикла испытаний (Test Cycle Closure): окончательная генерация отчетов о тестировании для клиента. Они должны включать затраченное время, 
процент обнаруженных ошибок и положительных результатов тестирования, общее количество обнаруженных и исправленных ошибок. Что касается отдела 
тестирования, то это момент для анализа его работы, подведения итогов, анализа его продуктивности и возможности внести предложения по улучшению 
качества тестирования




------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------

Разница STLC и SDLC

STLC и SDLC тесно связаны друг с другом, но они одновременно преследуют разные задачи с одной и той же целью, а именно:

    - сбор требований в желаемой форме и разработка заявленной функциональности (SDLC);
    - анализ требований, помощь клиенту и команде разработчиков и подтверждение качества реализованной функциональности (STLC).